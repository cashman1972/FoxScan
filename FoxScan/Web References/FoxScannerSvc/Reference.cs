//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FoxScan.FoxScannerSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IFoxScannerSvc", Namespace="http://tempuri.org/")]
    public partial class FoxScannerSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetStoreNameFromCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreEmployeeNameFromNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatasetXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterScannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRFIDInvScansOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadEliteShoeScansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScannerRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarkdownsVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastSoldInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecentInvTixBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFIDEPCsfromBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVerifiedEPCsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoxScanSvcVersionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FoxScannerSvc() {
            this.Url = "http://www.foxscannersvc.com.foxs.info/FoxScannerSvc.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetStoreNameFromCodeCompletedEventHandler GetStoreNameFromCodeCompleted;
        
        /// <remarks/>
        public event GetStoreEmployeeNameFromNumCompletedEventHandler GetStoreEmployeeNameFromNumCompleted;
        
        /// <remarks/>
        public event GetDatasetXMLCompletedEventHandler GetDatasetXMLCompleted;
        
        /// <remarks/>
        public event GetVendorListCompletedEventHandler GetVendorListCompleted;
        
        /// <remarks/>
        public event GetCategoryListCompletedEventHandler GetCategoryListCompleted;
        
        /// <remarks/>
        public event GetStoreInfoListCompletedEventHandler GetStoreInfoListCompleted;
        
        /// <remarks/>
        public event RegisterScannerCompletedEventHandler RegisterScannerCompleted;
        
        /// <remarks/>
        public event UploadRFIDInvScansCompletedEventHandler UploadRFIDInvScansCompleted;
        
        /// <remarks/>
        public event UploadEliteShoeScansCompletedEventHandler UploadEliteShoeScansCompleted;
        
        /// <remarks/>
        public event GetScannerRegistrationCompletedEventHandler GetScannerRegistrationCompleted;
        
        /// <remarks/>
        public event GetMarkdownsVendorCompletedEventHandler GetMarkdownsVendorCompleted;
        
        /// <remarks/>
        public event GetLastSoldInfoCompletedEventHandler GetLastSoldInfoCompleted;
        
        /// <remarks/>
        public event GetRecentInvTixBatchesCompletedEventHandler GetRecentInvTixBatchesCompleted;
        
        /// <remarks/>
        public event GetRFIDEPCsfromBatchListCompletedEventHandler GetRFIDEPCsfromBatchListCompleted;
        
        /// <remarks/>
        public event UpdateVerifiedEPCsCompletedEventHandler UpdateVerifiedEPCsCompleted;
        
        /// <remarks/>
        public event GetFoxScanSvcVersionCompletedEventHandler GetFoxScanSvcVersionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetStoreNameFromCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreNameFromCode(string storeCode) {
            object[] results = this.Invoke("GetStoreNameFromCode", new object[] {
                        storeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreNameFromCodeAsync(string storeCode) {
            this.GetStoreNameFromCodeAsync(storeCode, null);
        }
        
        /// <remarks/>
        public void GetStoreNameFromCodeAsync(string storeCode, object userState) {
            if ((this.GetStoreNameFromCodeOperationCompleted == null)) {
                this.GetStoreNameFromCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreNameFromCodeOperationCompleted);
            }
            this.InvokeAsync("GetStoreNameFromCode", new object[] {
                        storeCode}, this.GetStoreNameFromCodeOperationCompleted, userState);
        }
        
        private void OnGetStoreNameFromCodeOperationCompleted(object arg) {
            if ((this.GetStoreNameFromCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreNameFromCodeCompleted(this, new GetStoreNameFromCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetStoreEmployeeNameFromNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreEmployeeNameFromNum(string empNum) {
            object[] results = this.Invoke("GetStoreEmployeeNameFromNum", new object[] {
                        empNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreEmployeeNameFromNumAsync(string empNum) {
            this.GetStoreEmployeeNameFromNumAsync(empNum, null);
        }
        
        /// <remarks/>
        public void GetStoreEmployeeNameFromNumAsync(string empNum, object userState) {
            if ((this.GetStoreEmployeeNameFromNumOperationCompleted == null)) {
                this.GetStoreEmployeeNameFromNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreEmployeeNameFromNumOperationCompleted);
            }
            this.InvokeAsync("GetStoreEmployeeNameFromNum", new object[] {
                        empNum}, this.GetStoreEmployeeNameFromNumOperationCompleted, userState);
        }
        
        private void OnGetStoreEmployeeNameFromNumOperationCompleted(object arg) {
            if ((this.GetStoreEmployeeNameFromNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreEmployeeNameFromNumCompleted(this, new GetStoreEmployeeNameFromNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetDatasetXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDatasetXML(string sql, string database, string serverIPOverride) {
            object[] results = this.Invoke("GetDatasetXML", new object[] {
                        sql,
                        database,
                        serverIPOverride});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatasetXMLAsync(string sql, string database, string serverIPOverride) {
            this.GetDatasetXMLAsync(sql, database, serverIPOverride, null);
        }
        
        /// <remarks/>
        public void GetDatasetXMLAsync(string sql, string database, string serverIPOverride, object userState) {
            if ((this.GetDatasetXMLOperationCompleted == null)) {
                this.GetDatasetXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatasetXMLOperationCompleted);
            }
            this.InvokeAsync("GetDatasetXML", new object[] {
                        sql,
                        database,
                        serverIPOverride}, this.GetDatasetXMLOperationCompleted, userState);
        }
        
        private void OnGetDatasetXMLOperationCompleted(object arg) {
            if ((this.GetDatasetXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatasetXMLCompleted(this, new GetDatasetXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetVendorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVendorList() {
            object[] results = this.Invoke("GetVendorList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListAsync() {
            this.GetVendorListAsync(null);
        }
        
        /// <remarks/>
        public void GetVendorListAsync(object userState) {
            if ((this.GetVendorListOperationCompleted == null)) {
                this.GetVendorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListOperationCompleted);
            }
            this.InvokeAsync("GetVendorList", new object[0], this.GetVendorListOperationCompleted, userState);
        }
        
        private void OnGetVendorListOperationCompleted(object arg) {
            if ((this.GetVendorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListCompleted(this, new GetVendorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCategoryList() {
            object[] results = this.Invoke("GetCategoryList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryListAsync() {
            this.GetCategoryListAsync(null);
        }
        
        /// <remarks/>
        public void GetCategoryListAsync(object userState) {
            if ((this.GetCategoryListOperationCompleted == null)) {
                this.GetCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryListOperationCompleted);
            }
            this.InvokeAsync("GetCategoryList", new object[0], this.GetCategoryListOperationCompleted, userState);
        }
        
        private void OnGetCategoryListOperationCompleted(object arg) {
            if ((this.GetCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryListCompleted(this, new GetCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetStoreInfoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreInfoList() {
            object[] results = this.Invoke("GetStoreInfoList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreInfoListAsync() {
            this.GetStoreInfoListAsync(null);
        }
        
        /// <remarks/>
        public void GetStoreInfoListAsync(object userState) {
            if ((this.GetStoreInfoListOperationCompleted == null)) {
                this.GetStoreInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreInfoListOperationCompleted);
            }
            this.InvokeAsync("GetStoreInfoList", new object[0], this.GetStoreInfoListOperationCompleted, userState);
        }
        
        private void OnGetStoreInfoListOperationCompleted(object arg) {
            if ((this.GetStoreInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreInfoListCompleted(this, new GetStoreInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/RegisterScanner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterScanner(string serialNoTC20, string serialNoRFD2000, string storeCode) {
            object[] results = this.Invoke("RegisterScanner", new object[] {
                        serialNoTC20,
                        serialNoRFD2000,
                        storeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterScannerAsync(string serialNoTC20, string serialNoRFD2000, string storeCode) {
            this.RegisterScannerAsync(serialNoTC20, serialNoRFD2000, storeCode, null);
        }
        
        /// <remarks/>
        public void RegisterScannerAsync(string serialNoTC20, string serialNoRFD2000, string storeCode, object userState) {
            if ((this.RegisterScannerOperationCompleted == null)) {
                this.RegisterScannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterScannerOperationCompleted);
            }
            this.InvokeAsync("RegisterScanner", new object[] {
                        serialNoTC20,
                        serialNoRFD2000,
                        storeCode}, this.RegisterScannerOperationCompleted, userState);
        }
        
        private void OnRegisterScannerOperationCompleted(object arg) {
            if ((this.RegisterScannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterScannerCompleted(this, new RegisterScannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/UploadRFIDInvScans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadRFIDInvScans(string scannerID, string scannerData, int unitCountSent) {
            object[] results = this.Invoke("UploadRFIDInvScans", new object[] {
                        scannerID,
                        scannerData,
                        unitCountSent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRFIDInvScansAsync(string scannerID, string scannerData, int unitCountSent) {
            this.UploadRFIDInvScansAsync(scannerID, scannerData, unitCountSent, null);
        }
        
        /// <remarks/>
        public void UploadRFIDInvScansAsync(string scannerID, string scannerData, int unitCountSent, object userState) {
            if ((this.UploadRFIDInvScansOperationCompleted == null)) {
                this.UploadRFIDInvScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRFIDInvScansOperationCompleted);
            }
            this.InvokeAsync("UploadRFIDInvScans", new object[] {
                        scannerID,
                        scannerData,
                        unitCountSent}, this.UploadRFIDInvScansOperationCompleted, userState);
        }
        
        private void OnUploadRFIDInvScansOperationCompleted(object arg) {
            if ((this.UploadRFIDInvScansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRFIDInvScansCompleted(this, new UploadRFIDInvScansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/UploadEliteShoeScans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadEliteShoeScans(string scannerID, string scannerData, int unitCountSent) {
            object[] results = this.Invoke("UploadEliteShoeScans", new object[] {
                        scannerID,
                        scannerData,
                        unitCountSent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadEliteShoeScansAsync(string scannerID, string scannerData, int unitCountSent) {
            this.UploadEliteShoeScansAsync(scannerID, scannerData, unitCountSent, null);
        }
        
        /// <remarks/>
        public void UploadEliteShoeScansAsync(string scannerID, string scannerData, int unitCountSent, object userState) {
            if ((this.UploadEliteShoeScansOperationCompleted == null)) {
                this.UploadEliteShoeScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadEliteShoeScansOperationCompleted);
            }
            this.InvokeAsync("UploadEliteShoeScans", new object[] {
                        scannerID,
                        scannerData,
                        unitCountSent}, this.UploadEliteShoeScansOperationCompleted, userState);
        }
        
        private void OnUploadEliteShoeScansOperationCompleted(object arg) {
            if ((this.UploadEliteShoeScansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadEliteShoeScansCompleted(this, new UploadEliteShoeScansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetScannerRegistration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScannerRegistration(string serialTC20) {
            object[] results = this.Invoke("GetScannerRegistration", new object[] {
                        serialTC20});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScannerRegistrationAsync(string serialTC20) {
            this.GetScannerRegistrationAsync(serialTC20, null);
        }
        
        /// <remarks/>
        public void GetScannerRegistrationAsync(string serialTC20, object userState) {
            if ((this.GetScannerRegistrationOperationCompleted == null)) {
                this.GetScannerRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScannerRegistrationOperationCompleted);
            }
            this.InvokeAsync("GetScannerRegistration", new object[] {
                        serialTC20}, this.GetScannerRegistrationOperationCompleted, userState);
        }
        
        private void OnGetScannerRegistrationOperationCompleted(object arg) {
            if ((this.GetScannerRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScannerRegistrationCompleted(this, new GetScannerRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetMarkdownsVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMarkdownsVendor(string vendorCode, string storeCode) {
            object[] results = this.Invoke("GetMarkdownsVendor", new object[] {
                        vendorCode,
                        storeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarkdownsVendorAsync(string vendorCode, string storeCode) {
            this.GetMarkdownsVendorAsync(vendorCode, storeCode, null);
        }
        
        /// <remarks/>
        public void GetMarkdownsVendorAsync(string vendorCode, string storeCode, object userState) {
            if ((this.GetMarkdownsVendorOperationCompleted == null)) {
                this.GetMarkdownsVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarkdownsVendorOperationCompleted);
            }
            this.InvokeAsync("GetMarkdownsVendor", new object[] {
                        vendorCode,
                        storeCode}, this.GetMarkdownsVendorOperationCompleted, userState);
        }
        
        private void OnGetMarkdownsVendorOperationCompleted(object arg) {
            if ((this.GetMarkdownsVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarkdownsVendorCompleted(this, new GetMarkdownsVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetLastSoldInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastSoldInfo(string barCode) {
            object[] results = this.Invoke("GetLastSoldInfo", new object[] {
                        barCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastSoldInfoAsync(string barCode) {
            this.GetLastSoldInfoAsync(barCode, null);
        }
        
        /// <remarks/>
        public void GetLastSoldInfoAsync(string barCode, object userState) {
            if ((this.GetLastSoldInfoOperationCompleted == null)) {
                this.GetLastSoldInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastSoldInfoOperationCompleted);
            }
            this.InvokeAsync("GetLastSoldInfo", new object[] {
                        barCode}, this.GetLastSoldInfoOperationCompleted, userState);
        }
        
        private void OnGetLastSoldInfoOperationCompleted(object arg) {
            if ((this.GetLastSoldInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastSoldInfoCompleted(this, new GetLastSoldInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetRecentInvTixBatches", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRecentInvTixBatches() {
            object[] results = this.Invoke("GetRecentInvTixBatches", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecentInvTixBatchesAsync() {
            this.GetRecentInvTixBatchesAsync(null);
        }
        
        /// <remarks/>
        public void GetRecentInvTixBatchesAsync(object userState) {
            if ((this.GetRecentInvTixBatchesOperationCompleted == null)) {
                this.GetRecentInvTixBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentInvTixBatchesOperationCompleted);
            }
            this.InvokeAsync("GetRecentInvTixBatches", new object[0], this.GetRecentInvTixBatchesOperationCompleted, userState);
        }
        
        private void OnGetRecentInvTixBatchesOperationCompleted(object arg) {
            if ((this.GetRecentInvTixBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentInvTixBatchesCompleted(this, new GetRecentInvTixBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetRFIDEPCsfromBatchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRFIDEPCsfromBatchList(string batchList) {
            object[] results = this.Invoke("GetRFIDEPCsfromBatchList", new object[] {
                        batchList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFIDEPCsfromBatchListAsync(string batchList) {
            this.GetRFIDEPCsfromBatchListAsync(batchList, null);
        }
        
        /// <remarks/>
        public void GetRFIDEPCsfromBatchListAsync(string batchList, object userState) {
            if ((this.GetRFIDEPCsfromBatchListOperationCompleted == null)) {
                this.GetRFIDEPCsfromBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFIDEPCsfromBatchListOperationCompleted);
            }
            this.InvokeAsync("GetRFIDEPCsfromBatchList", new object[] {
                        batchList}, this.GetRFIDEPCsfromBatchListOperationCompleted, userState);
        }
        
        private void OnGetRFIDEPCsfromBatchListOperationCompleted(object arg) {
            if ((this.GetRFIDEPCsfromBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFIDEPCsfromBatchListCompleted(this, new GetRFIDEPCsfromBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/UpdateVerifiedEPCs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateVerifiedEPCs(string epcList) {
            object[] results = this.Invoke("UpdateVerifiedEPCs", new object[] {
                        epcList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVerifiedEPCsAsync(string epcList) {
            this.UpdateVerifiedEPCsAsync(epcList, null);
        }
        
        /// <remarks/>
        public void UpdateVerifiedEPCsAsync(string epcList, object userState) {
            if ((this.UpdateVerifiedEPCsOperationCompleted == null)) {
                this.UpdateVerifiedEPCsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVerifiedEPCsOperationCompleted);
            }
            this.InvokeAsync("UpdateVerifiedEPCs", new object[] {
                        epcList}, this.UpdateVerifiedEPCsOperationCompleted, userState);
        }
        
        private void OnUpdateVerifiedEPCsOperationCompleted(object arg) {
            if ((this.UpdateVerifiedEPCsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVerifiedEPCsCompleted(this, new UpdateVerifiedEPCsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFoxScannerSvc/GetFoxScanSvcVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFoxScanSvcVersion() {
            object[] results = this.Invoke("GetFoxScanSvcVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoxScanSvcVersionAsync() {
            this.GetFoxScanSvcVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetFoxScanSvcVersionAsync(object userState) {
            if ((this.GetFoxScanSvcVersionOperationCompleted == null)) {
                this.GetFoxScanSvcVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoxScanSvcVersionOperationCompleted);
            }
            this.InvokeAsync("GetFoxScanSvcVersion", new object[0], this.GetFoxScanSvcVersionOperationCompleted, userState);
        }
        
        private void OnGetFoxScanSvcVersionOperationCompleted(object arg) {
            if ((this.GetFoxScanSvcVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoxScanSvcVersionCompleted(this, new GetFoxScanSvcVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStoreNameFromCodeCompletedEventHandler(object sender, GetStoreNameFromCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreNameFromCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreNameFromCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStoreEmployeeNameFromNumCompletedEventHandler(object sender, GetStoreEmployeeNameFromNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreEmployeeNameFromNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreEmployeeNameFromNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDatasetXMLCompletedEventHandler(object sender, GetDatasetXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatasetXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatasetXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetVendorListCompletedEventHandler(object sender, GetVendorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCategoryListCompletedEventHandler(object sender, GetCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStoreInfoListCompletedEventHandler(object sender, GetStoreInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RegisterScannerCompletedEventHandler(object sender, RegisterScannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterScannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterScannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UploadRFIDInvScansCompletedEventHandler(object sender, UploadRFIDInvScansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRFIDInvScansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRFIDInvScansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UploadEliteShoeScansCompletedEventHandler(object sender, UploadEliteShoeScansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadEliteShoeScansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadEliteShoeScansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScannerRegistrationCompletedEventHandler(object sender, GetScannerRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScannerRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScannerRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMarkdownsVendorCompletedEventHandler(object sender, GetMarkdownsVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarkdownsVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarkdownsVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLastSoldInfoCompletedEventHandler(object sender, GetLastSoldInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastSoldInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastSoldInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRecentInvTixBatchesCompletedEventHandler(object sender, GetRecentInvTixBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentInvTixBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecentInvTixBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRFIDEPCsfromBatchListCompletedEventHandler(object sender, GetRFIDEPCsfromBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFIDEPCsfromBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFIDEPCsfromBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateVerifiedEPCsCompletedEventHandler(object sender, UpdateVerifiedEPCsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVerifiedEPCsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVerifiedEPCsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFoxScanSvcVersionCompletedEventHandler(object sender, GetFoxScanSvcVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoxScanSvcVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoxScanSvcVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591